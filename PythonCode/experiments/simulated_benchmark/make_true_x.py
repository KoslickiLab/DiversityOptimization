import subprocess
import numpy as np


def make_true_x(metagenome, reference, bbmap_dir):
    """ make_true_x
    Creates vector of the population proportions of a metagenome, each index representing proportions of the sequences
        from a reference genome (in the order of the reference genome)
    Call via:
    true_x = make_true_x(metagenome, reference)
    Parameters are:
    metagenome is the string location of the sample metagenome
    reference is the string location of the reference database
    bbmap_dir is the directory in which bbmap is installed

    Returns:
    x: an ndarray where the i-th element represents the proportion in metagenome of the i-th sequence listed in
        reference
    """

    #bbmap_dir = "bbmap"  # location of bbmap

    subprocess.run(
        f"bash {bbmap_dir}/bbmap.sh -Xmx10g in={metagenome} ref={reference} out=/dev/null covstats=covstats.txt "
        f"twocolumn=t", shell=True, stdout=subprocess.DEVNULL)

    ## Get table generated by bbmap
    covstats = np.genfromtxt("covstats.txt", dtype=str, delimiter='\t', skip_header=1)
    # If there's only a single row, make sure to turn it into a matrix
    if len(covstats.shape) == 1:
        covstats = covstats.reshape((1, 2))

    ids = list(covstats[:, 0])  # Sequence ids (first column of covstats)

    # create normalized, unordered x from second column of covstats
    unordered_x = np.array(list(map(float, covstats[:, 1])))
    unordered_x = unordered_x / sum(unordered_x)

    ## Create list with each index representing the population of each sequence id
    x = list()
    with open(reference, 'r') as file:
        for line in file:
            if line[0] == '>':
                loc = ids.index(line[1:-1])
                x.append(unordered_x[loc])

    return np.array(x)
